//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CCEngine {

public class Collider : Behaviour {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public Collider(global::System.IntPtr cPtr, bool cMemoryOwn) : base(CherryEnginePINVOKE.Collider_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(Collider obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CherryEnginePINVOKE.delete_Collider(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public PhysicActor m_physicActor {
    set {
      CherryEnginePINVOKE.Collider_m_physicActor_set(swigCPtr, PhysicActor.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = CherryEnginePINVOKE.Collider_m_physicActor_get(swigCPtr);
      PhysicActor ret = (cPtr == global::System.IntPtr.Zero) ? null : new PhysicActor(cPtr, false);
      return ret;
    } 
  }

  public void SetEnabled(bool isEnabled) {
    CherryEnginePINVOKE.Collider_SetEnabled(swigCPtr, isEnabled);
  }

  public bool GetEnabled() {
    bool ret = CherryEnginePINVOKE.Collider_GetEnabled(swigCPtr);
    return ret;
  }

  public void SetTrigger(bool isTrigger) {
    CherryEnginePINVOKE.Collider_SetTrigger(swigCPtr, isTrigger);
  }

  public bool GetTrigger() {
    bool ret = CherryEnginePINVOKE.Collider_GetTrigger(swigCPtr);
    return ret;
  }

}

}
