//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CCEngine {

public class BoxCollider : Collider {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public BoxCollider(global::System.IntPtr cPtr, bool cMemoryOwn) : base(CherryEnginePINVOKE.BoxCollider_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(BoxCollider obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CherryEnginePINVOKE.delete_BoxCollider(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public BoxCollider() : this(CherryEnginePINVOKE.new_BoxCollider(), true) {
  }

  public void SetScale(Vector3 scale) {
    CherryEnginePINVOKE.BoxCollider_SetScale(swigCPtr, Vector3.getCPtr(scale));
    if (CherryEnginePINVOKE.SWIGPendingException.Pending) throw CherryEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector3 GetScale() {
    Vector3 ret = new Vector3(CherryEnginePINVOKE.BoxCollider_GetScale(swigCPtr), true);
    return ret;
  }

}

}
