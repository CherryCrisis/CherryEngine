//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CCEngine {

public class SphereCollider : Collider {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public SphereCollider(global::System.IntPtr cPtr, bool cMemoryOwn) : base(CherryEnginePINVOKE.SphereCollider_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(SphereCollider obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CherryEnginePINVOKE.delete_SphereCollider(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public SphereCollider() : this(CherryEnginePINVOKE.new_SphereCollider(), true) {
  }

  public void SetScale(float scale) {
    CherryEnginePINVOKE.SphereCollider_SetScale(swigCPtr, scale);
  }

  public float GetScale() {
    float ret = CherryEnginePINVOKE.SphereCollider_GetScale(swigCPtr);
    return ret;
  }

}

}
