//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CCEngine {

public class Cell : Object {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public Cell(global::System.IntPtr cPtr, bool cMemoryOwn) : base(CherryEnginePINVOKE.Cell_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(Cell obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CherryEnginePINVOKE.delete_Cell(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public void Initialize() {
    CherryEnginePINVOKE.Cell_Initialize(swigCPtr);
  }

  public EntityVector GetEntities() {
    EntityVector ret = new EntityVector(CherryEnginePINVOKE.Cell_GetEntities(swigCPtr), false);
    return ret;
  }

  public void SetName(string name) {
    CherryEnginePINVOKE.Cell_SetName(swigCPtr, name);
    if (CherryEnginePINVOKE.SWIGPendingException.Pending) throw CherryEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetName() {
    string ret = CherryEnginePINVOKE.Cell_GetName(swigCPtr);
    return ret;
  }

		public override string ToString() => GetName();
	
}

}
